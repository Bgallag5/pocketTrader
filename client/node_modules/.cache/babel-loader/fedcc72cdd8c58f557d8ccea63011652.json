{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport pokeAPI from './utils/pokeAPI';\nimport { generatePokemonStats, generatePokemonLevel } from \"./utils/actualizedStats\";\nimport PokeStorePage from \"./pages/PokeStorePage\";\nimport ProfilePage from './pages/ProfilePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n  _s();\n\n  //set state at APP level to track all pokemon in our pokedexDB \n  const [pokedex, setPokedex] = useState([]); // console.log(pokedex);\n  //useEffect to call our API file on App load and setPokedex to the returned array of pokemon \n\n  useEffect(() => {\n    // pokemon getAll fetch\n    pokeAPI.get('/pokemon/', {}).then(response => {\n      // console.log(response.data.results);\n      const pokemonURL = response.data.results.map(pokemon => {\n        return pokemon.url;\n      });\n      setPokedex(pokemonURL);\n    }).catch(err => console.log(err)); //[] run once on app load \n  }, []);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: PokeStorePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          component: ProfilePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          render: () => /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-2\",\n            children: \"Wrong page!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"S5daK7qqcKkyKtq9szxGs4BXkIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/App.js"],"names":["React","useState","useEffect","ApolloProvider","ApolloClient","BrowserRouter","Router","Switch","Route","pokeAPI","generatePokemonStats","generatePokemonLevel","PokeStorePage","ProfilePage","client","request","operation","token","localStorage","getItem","setContext","headers","authorization","uri","App","pokedex","setPokedex","get","then","response","pokemonURL","data","results","map","pokemon","url","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,yBAA3D;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAGA,MAAMC,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BW,EAAAA,OAAO,EAAEC,SAAS,IAAI;AACpB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AAEAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADU,KAArB;AAKD,GAT6B;AAU9BM,EAAAA,GAAG,EAAE;AAVyB,CAAjB,CAAf;;AAeA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBzB,QAAQ,CAAC,EAAD,CAAvC,CAHa,CAIb;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,OAAO,CAACkB,GAAR,CAAY,WAAZ,EAAyB,EAAzB,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAClB;AAEA,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,OAAO,IAAI;AACtD,eAAOA,OAAO,CAACC,GAAf;AACD,OAFkB,CAAnB;AAIAT,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD,KAVD,EAWCM,KAXD,CAWOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXd,EAFc,CAed;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAoBA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEvB,MAAxB;AAAA,2BACC,QAAC,MAAD;AAAA,6BAEG,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,mBAAM;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxCQW,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport pokeAPI from './utils/pokeAPI';\nimport { generatePokemonStats, generatePokemonLevel } from \"./utils/actualizedStats\";\nimport PokeStorePage from \"./pages/PokeStorePage\";\nimport ProfilePage from './pages/ProfilePage';\n\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\n\n\nfunction App() {\n\n  //set state at APP level to track all pokemon in our pokedexDB \n  const [pokedex, setPokedex]  = useState([]);\n  // console.log(pokedex);\n\n  //useEffect to call our API file on App load and setPokedex to the returned array of pokemon \n  useEffect(() => {\n    // pokemon getAll fetch\n    pokeAPI.get('/pokemon/', {\n\n    }).then(response => {\n      // console.log(response.data.results);\n      \n      const pokemonURL = response.data.results.map(pokemon => {\n        return pokemon.url\n      })\n      \n      setPokedex(pokemonURL)\n    })\n    .catch(err => console.log(err))\n\n    //[] run once on app load \n  }, [])\n\n  \n\n  return (\n    <ApolloProvider client={client} >\n     <Router> \n\n        <Switch>\n          <Route exact path='/' component={PokeStorePage} />\n          <Route exact path='/profile' component={ProfilePage} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch>\n\n    </ Router> \n    </ ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}