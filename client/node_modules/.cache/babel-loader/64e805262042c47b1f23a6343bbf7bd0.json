{"ast":null,"code":"//generate random level by base experience?\n//base xp, highest and lowest I see: 39-306(Blissy wtf?: 608 Chansey: 395)\nexport const generatePokemonLevel = baseXP => {\n  console.log(baseXP);\n  let level = 1;\n\n  if (baseXP < 100) {\n    level = 10 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (100 <= baseXP && baseXP <= 150) {\n    level = 25 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (150 < baseXP && baseXP <= 200) {\n    level = 40 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (200 < baseXP && baseXP <= 235) {\n    level = 55 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else {\n    level = 55 + (Math.floor(Math.random() * 35) + 1);\n    return level;\n  }\n};\nconsole.log(generatePokemonLevel(142)); //takes stats as array of base stats and returns actualized stats\n\nexport const generatePokemonStats = (stats, level) => {\n  let newStats = [];\n  let statRandomizer = Math.random() + Math.random();\n  console.log(\"STAT MULTIPLIER\");\n  console.log(statRandomizer);\n  stats.map(stat => {\n    return newStats.push(stat * statRandomizer + level);\n  });\n  return newStats;\n};\nconsole.log(generatePokemonStats([83, 80, 75, 70, 70, 101], 38)); // make these functions async and call them together when the pokemon is bought?\n//generatePokemonStats needs access to level","map":{"version":3,"sources":["/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/utils/actualizedStats.js"],"names":["generatePokemonLevel","baseXP","console","log","level","Math","floor","random","generatePokemonStats","stats","newStats","statRandomizer","map","stat","push"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,oBAAoB,GAAIC,MAAD,IAAY;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,KAAK,GAAG,CAAZ;;AAEA,MAAIH,MAAM,GAAG,GAAb,EAAkB;AAChBG,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAvC,CAAR;AACA,WAAOH,KAAP;AACD,GAHD,MAGO,IAAI,OAAOH,MAAP,IAAiBA,MAAM,IAAI,GAA/B,EAAoC;AACzCG,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAvC,CAAR;AACA,WAAOH,KAAP;AACD,GAHM,MAGA,IAAI,MAAMH,MAAN,IAAgBA,MAAM,IAAI,GAA9B,EAAmC;AACxCG,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAvC,CAAR;AACA,WAAOH,KAAP;AACD,GAHM,MAGA,IAAI,MAAMH,MAAN,IAAgBA,MAAM,IAAI,GAA9B,EAAmC;AACxCG,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAvC,CAAR;AACA,WAAOH,KAAP;AACD,GAHM,MAGA;AACLA,IAAAA,KAAK,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAvC,CAAR;AACA,WAAOH,KAAP;AACD;AACF,CApBM;AAsBPF,OAAO,CAACC,GAAR,CAAYH,oBAAoB,CAAC,GAAD,CAAhC,E,CAEA;;AACA,OAAO,MAAMQ,oBAAoB,GAAG,CAACC,KAAD,EAAQL,KAAR,KAAkB;AACpD,MAAIM,QAAQ,GAAG,EAAf;AAEA,MAAIC,cAAc,GAAGN,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACE,MAAL,EAArC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYQ,cAAZ;AAEAF,EAAAA,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AAClB,WAAOH,QAAQ,CAACI,IAAT,CAAcD,IAAI,GAAGF,cAAP,GAAwBP,KAAtC,CAAP;AACD,GAFD;AAGA,SAAOM,QAAP;AACD,CAXM;AAYPR,OAAO,CAACC,GAAR,CAAYK,oBAAoB,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,CAAD,EAA4B,EAA5B,CAAhC,E,CAEA;AACA","sourcesContent":["//generate random level by base experience?\n//base xp, highest and lowest I see: 39-306(Blissy wtf?: 608 Chansey: 395)\nexport const generatePokemonLevel = (baseXP) => {\n  console.log(baseXP);\n  let level = 1;\n\n  if (baseXP < 100) {\n    level = 10 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (100 <= baseXP && baseXP <= 150) {\n    level = 25 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (150 < baseXP && baseXP <= 200) {\n    level = 40 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else if (200 < baseXP && baseXP <= 235) {\n    level = 55 + (Math.floor(Math.random() * 14) + 1);\n    return level;\n  } else {\n    level = 55 + (Math.floor(Math.random() * 35) + 1);\n    return level;\n  }\n};\n\nconsole.log(generatePokemonLevel(142));\n\n//takes stats as array of base stats and returns actualized stats\nexport const generatePokemonStats = (stats, level) => {\n  let newStats = [];\n\n  let statRandomizer = Math.random() + Math.random();\n  console.log(\"STAT MULTIPLIER\");\n  console.log(statRandomizer);\n\n  stats.map((stat) => {\n    return newStats.push(stat * statRandomizer + level);\n  });\n  return newStats;\n};\nconsole.log(generatePokemonStats([83, 80, 75, 70, 70, 101], 38));\n\n// make these functions async and call them together when the pokemon is bought?\n//generatePokemonStats needs access to level\n"]},"metadata":{},"sourceType":"module"}