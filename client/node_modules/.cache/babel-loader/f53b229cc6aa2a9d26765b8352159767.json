{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/pages/PokeStorePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { createPokemonStats } from \"../utils/actualizedStats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PokeStorePage(props) {\n  _s();\n\n  const {\n    pokedex\n  } = props;\n  const [pokemonJSON, setPokemonJSON] = useState([]); //   console.log(\"POKEMON JSON\");\n\n  console.log(pokemonJSON); //useEffect - fetchJSON will probably go in another file to save as global state\n  //envoke fetchJSON on mount \n\n  useEffect(() => {\n    fetchJSON(pokedex);\n  }, [pokedex]); //fetch pokemon JSON and store as pokemonJSON state\n\n  const fetchJSON = pokedex => {\n    // eslint-disable-next-line array-callback-return\n    pokedex.map(url => {\n      axios.get(url).then(response => {\n        //prevState => ...prevState to add to state \n        setPokemonJSON(prevState => {\n          return [...prevState, response.data];\n        });\n      });\n    });\n  }; //functions to handle: openPokemonModal, filter/search, buyPokemon, buyCoins (open a modal on store page? or buy coins in profile?)\n  //render our store page with all pokemon\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pokemon Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), pokemonJSON.map(pokemon => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: pokemon.base_experience\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n} // const pokemonModel = [\n//   {\n//     pokeName: \"test\",\n//     base_experience: 1,\n//   },\n//   {\n//     pokeName: \"test 2\",\n//     base_experience: 2,\n//   },\n// ];\n\n_s(PokeStorePage, \"PTqt9mBmvoEWe3oKv6RFMdHD9lQ=\");\n\n_c = PokeStorePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeStorePage\");","map":{"version":3,"sources":["/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/pages/PokeStorePage.js"],"names":["React","useEffect","useState","axios","createPokemonStats","PokeStorePage","props","pokedex","pokemonJSON","setPokemonJSON","console","log","fetchJSON","map","url","get","then","response","prevState","data","pokemon","name","base_experience"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAH2C,CAI7C;;AACEQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAL2C,CAO3C;AACA;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS,CAACL,OAAD,CAAT;AAEH,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT,CAT2C,CAe3C;;AACA,QAAMK,SAAS,GAAIL,OAAD,IAAa;AAC7B;AACAA,IAAAA,OAAO,CAACM,GAAR,CAAaC,GAAD,IAAS;AACnBX,MAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,QAAD,IAAc;AAEhC;AACAR,QAAAA,cAAc,CAACS,SAAS,IAAI;AACxB,iBAAO,CAAC,GAAGA,SAAJ,EAAeD,QAAQ,CAACE,IAAxB,CAAP;AACH,SAFa,CAAd;AAGD,OAND;AAOD,KARD;AASD,GAXD,CAhB2C,CA6B3C;AAEA;;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGX,WAAW,CAACK,GAAZ,CAAiBO,OAAD,IAAa;AAC5B,0BACE;AAAA,gCACE;AAAA,oBAAIA,OAAO,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMD,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD,KAPA,CAFH;AAAA,kBADF;AAaD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAxDwBjB,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { createPokemonStats } from \"../utils/actualizedStats\";\n\nexport default function PokeStorePage(props) {\n  const { pokedex } = props;\n\n  const [pokemonJSON, setPokemonJSON] = useState([]);\n//   console.log(\"POKEMON JSON\");\n  console.log(pokemonJSON);\n\n  //useEffect - fetchJSON will probably go in another file to save as global state\n  //envoke fetchJSON on mount \n  useEffect(() => {\n      fetchJSON(pokedex)\n\n  }, [pokedex] );\n\n\n  //fetch pokemon JSON and store as pokemonJSON state\n  const fetchJSON = (pokedex) => {\n    // eslint-disable-next-line array-callback-return\n    pokedex.map((url) => {\n      axios.get(url).then((response) => {\n\n        //prevState => ...prevState to add to state \n        setPokemonJSON(prevState => {\n            return [...prevState, response.data ]\n        });\n      });\n    });\n  };\n\n  //functions to handle: openPokemonModal, filter/search, buyPokemon, buyCoins (open a modal on store page? or buy coins in profile?)\n\n  //render our store page with all pokemon\n  return (\n    <>\n      <div>Pokemon Store</div>\n      {pokemonJSON.map((pokemon) => {\n        return (\n          <>\n            <p>{pokemon.name}</p>\n            <div>{pokemon.base_experience}</div>\n          </>\n        );\n      })}\n    </>\n  );\n}\n\n// const pokemonModel = [\n//   {\n//     pokeName: \"test\",\n//     base_experience: 1,\n//   },\n//   {\n//     pokeName: \"test 2\",\n//     base_experience: 2,\n//   },\n// ];\n"]},"metadata":{},"sourceType":"module"}