{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport pokeAPI from './utils/pokeAPI'; // import { pokemonJSON } from './utils/pokeAPI';\n\nimport { generatePokemonStats, generatePokemonLevel } from \"./utils/actualizedStats\";\nimport PokeStorePage from \"./pages/PokeStorePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //set state at APP level to track all pokemon in our pokedexDB \n  const [pokedex, setPokedex] = useState([]); // console.log('APP POKEDEX');\n  // console.log(pokedex);\n  //useEffect to call our API file on App load and setPokedex to the returned array of pokemon \n\n  useEffect(() => {\n    // pokemon getAll fetch\n    pokeAPI.get('/pokemon/', {}).then(response => {\n      // console.log(response.data.results);\n      const pokemonURL = response.data.results.map(pokemon => {\n        return pokemon.url;\n      }); //sets pokemon to array of urls, how do we use this/ store it\n      //lets probably use useStoreContext \n\n      setPokedex(pokemonURL);\n    }).catch(err => console.log(err)); //[] run once on app load \n  }, []);\n  return (\n    /*#__PURE__*/\n    //conditionally render pages \n    _jsxDEV(PokeStorePage, {\n      pokedex: pokedex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"S5daK7qqcKkyKtq9szxGs4BXkIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/App.js"],"names":["React","useState","useEffect","pokeAPI","generatePokemonStats","generatePokemonLevel","PokeStorePage","App","pokedex","setPokedex","get","then","response","pokemonURL","data","results","map","pokemon","url","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CACA;;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,yBAA3D;AAEA,OAAOC,aAAP,MAA0B,uBAA1B;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBR,QAAQ,CAAC,EAAD,CAAvC,CAHa,CAIb;AACA;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,OAAO,CAACO,GAAR,CAAY,WAAZ,EAAyB,EAAzB,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAClB;AAEA,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0BC,OAAO,IAAI;AACtD,eAAOA,OAAO,CAACC,GAAf;AACD,OAFkB,CAAnB,CAHkB,CAOlB;AACA;;AACAT,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD,KAZD,EAaCM,KAbD,CAaOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbd,EAFc,CAiBd;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA;AAAA;AACE;AACA,YAAC,aAAD;AAAgB,MAAA,OAAO,EAAGZ;AAA1B;AAAA;AAAA;AAAA;AAAA;AAFF;AAID;;GAhCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport pokeAPI from './utils/pokeAPI';\n// import { pokemonJSON } from './utils/pokeAPI';\nimport { generatePokemonStats, generatePokemonLevel } from \"./utils/actualizedStats\";\n\nimport PokeStorePage from \"./pages/PokeStorePage\";\n\n\n\nfunction App() {\n\n  //set state at APP level to track all pokemon in our pokedexDB \n  const [pokedex, setPokedex]  = useState([]);\n  // console.log('APP POKEDEX');\n  // console.log(pokedex);\n\n  //useEffect to call our API file on App load and setPokedex to the returned array of pokemon \n  useEffect(() => {\n    // pokemon getAll fetch\n    pokeAPI.get('/pokemon/', {\n\n    }).then(response => {\n      // console.log(response.data.results);\n      \n      const pokemonURL = response.data.results.map(pokemon => {\n        return pokemon.url\n      })\n      \n      //sets pokemon to array of urls, how do we use this/ store it\n      //lets probably use useStoreContext \n      setPokedex(pokemonURL)\n    })\n    .catch(err => console.log(err))\n\n    //[] run once on app load \n  }, [])\n\n  return (\n    //conditionally render pages \n    <PokeStorePage  pokedex= {pokedex} />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}