{"ast":null,"code":"var _jsxFileName = \"/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/pages/PokeStorePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PokeStorePage(props) {\n  _s();\n\n  const {\n    pokedex\n  } = props;\n  const dispatch = useDispatch();\n  const [pokemonJSON, setPokemonJSON] = useState([]);\n  console.log('POKEMON JSON');\n  console.log(pokemonJSON); //   useEffect(() => {\n  //     const pokedexCopy = [...pokedex]\n  //  dispatch(pokedexCopy.map((url) => {\n  //     axios.get(url).then(response => {\n  //         console.log(response.data);\n  //         const newPokemon = {\n  //             pokeName: response.data.name,\n  //             base_experience: response.data.base_experience\n  //         }\n  //         setPokemonJSON([...pokemonJSON, newPokemon])\n  //     })\n  // }));\n  // }, [dispatch, pokedex, pokemonJSON]);\n\n  useEffect(() => {\n    const displayPokemon = async () => {\n      axios.get;\n    };\n  }); //functions to handle: openPokemonModal, filter/search, buyPokemon, buyCoins (open a modal on store page? or buy coins in profile?)\n  //render our store page with all pokemon\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pokemon Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), pokemonJSON.map(pokemon => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemon.pokeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: pokemon.base_experience\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n}\n\n_s(PokeStorePage, \"NsbZDYR8VWSvSwJ9zqfLm+rrb4s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PokeStorePage;\nconst pokemonModel = [{\n  name: '',\n  base_experience: 0\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeStorePage\");","map":{"version":3,"sources":["/Users/bengallagher/Desktop/Challenges 2/pokeTrader/client/src/pages/PokeStorePage.js"],"names":["React","Component","useEffect","useState","useDispatch","axios","PokeStorePage","props","pokedex","dispatch","pokemonJSON","setPokemonJSON","console","log","displayPokemon","get","map","pokemon","pokeName","base_experience","pokemonModel","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAN2C,CAQ7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,cAAc,GAAG,YAAY;AAC/BT,MAAAA,KAAK,CAACU,GAAN;AACH,KAFD;AAGH,GAJQ,CAAT,CAtB6C,CA6B3C;AAEA;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,WAAW,CAACM,GAAZ,CAAgBC,OAAO,IAAI;AACxB,0BACI;AAAA,gCACJ;AAAA,oBAAIA,OAAO,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA,oBAAMD,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA,sBADJ;AAMH,KAPA,CAFH;AAAA,kBADF;AAcD;;GA9CuBb,a;UAELF,W;;;KAFKE,a;AAiDxB,MAAMc,YAAY,GAAG,CACjB;AACAC,EAAAA,IAAI,EAAE,EADN;AAEAF,EAAAA,eAAe,EAAE;AAFjB,CADiB,CAArB","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux'; \nimport axios from \"axios\";\n\nexport default function PokeStorePage(props) {\n  const { pokedex } = props;\n  const dispatch = useDispatch();\n\n  const [pokemonJSON, setPokemonJSON] = useState([]) \n  console.log('POKEMON JSON');\n  console.log(pokemonJSON);\n  \n//   useEffect(() => {\n//     const pokedexCopy = [...pokedex]\n//  dispatch(pokedexCopy.map((url) => {\n//     axios.get(url).then(response => {\n//         console.log(response.data);\n//         const newPokemon = {\n//             pokeName: response.data.name,\n//             base_experience: response.data.base_experience\n//         }\n//         setPokemonJSON([...pokemonJSON, newPokemon])\n//     })\n// }));\n// }, [dispatch, pokedex, pokemonJSON]);\n\nuseEffect(() => {\n    const displayPokemon = async () => {\n        axios.get\n    }\n})\n\n\n  //functions to handle: openPokemonModal, filter/search, buyPokemon, buyCoins (open a modal on store page? or buy coins in profile?)\n\n  //render our store page with all pokemon\n  return (\n    <>\n      <div>Pokemon Store</div>\n      {pokemonJSON.map(pokemon => {\n          return ( \n              <>\n          <p>{pokemon.pokeName}</p>\n          <div>{pokemon.base_experience}</div>\n          </>\n          )\n      })}\n      \n    </>\n  );\n}\n\n\nconst pokemonModel = [\n    {\n    name: '',\n    base_experience: 0,\n},\n]"]},"metadata":{},"sourceType":"module"}